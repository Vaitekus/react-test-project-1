{"version":3,"file":"static/js/979.26aa9315.chunk.js","mappings":"2IACA,QAA2B,0BAA3B,EAAyE,mCAAzE,EAA8H,iCAA9H,EAAiL,iCAAjL,EAAmO,gCAAnO,EAAsR,kC,cCAtR,QAAiC,6BAAjC,EAAuE,qB,aCEvE,MASA,EATcA,IACZ,IAAIC,EAAO,cAAgBD,EAAME,GACjC,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAuBC,UACpCH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAMG,UAAWK,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAWL,EAAiB,EAAE,EAACC,SAAEN,EAAMW,QAClF,ECPT,EAAiC,gCAAjC,EAA4E,0BCU5E,EATiBX,IACf,IAAIY,EAAeZ,EAAMa,QAAUR,EAAmB,GACtD,OACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAyB,IAAMO,EAAaN,SACzDN,EAAMc,MACH,E,gECEV,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAU/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EATJlB,IAEpBoB,EAAAA,EAAAA,MAAA,QAAMC,SAAUrB,EAAMsB,aAAclB,UAAWC,EAAuBC,SAAA,EACpEH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,KAAK,KAAKC,KAAK,IAAIhB,KAAK,UAAUiB,SAAU,CAACC,EAAAA,EAAUd,MACnFZ,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAA0ByB,KAAK,SAAQxB,SAAC,gBAmCjE,EA7BiBN,IACf,IAAI+B,EAAe/B,EAAMgC,QAAQC,MAAMC,KACrC,CAACvB,EAAMwB,KAAUhC,EAAAA,EAAAA,KAACiC,EAAI,CAAClC,GAAIS,EAAKT,GAAIS,KAAMA,EAAKG,MAAWqB,KAExDE,EAAmBrC,EAAMgC,QAAQM,SAASJ,KAC5C,CAACK,EAASJ,KAAUhC,EAAAA,EAAAA,KAACqC,EAAO,CAAC1B,KAAMyB,EAAQzB,KAAMD,QAAS0B,EAAQ1B,SAAcsB,KAMlF,OAAKnC,EAAMyC,QAITrB,EAAAA,EAAAA,MAAA,OAAKhB,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAA0BC,SAAC,eAC1CH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAwBC,UACtCH,EAAAA,EAAAA,KAAA,MAAAG,SACGyB,OAGLX,EAAAA,EAAAA,MAAA,OAAKhB,UAAWC,EAAwBC,SAAA,EACtCH,EAAAA,EAAAA,KAACc,EAAmB,CAACI,SAhBTP,IAChBd,EAAM0C,WAAW5B,EAAKyB,QAAQ,IAgBzBF,SAZElC,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAACnC,GAAG,UAcd,E,cCzCV,IAAIoC,EAAsBC,IACjB,CACLJ,OAAQI,EAAMC,YAAYL,SCa9B,SAAeM,E,QAAAA,KACbC,EAAAA,EAAAA,KAfgBH,IACV,CACJb,QAASa,EAAMI,mBAIEC,IACZ,CACLR,WAAa5B,IACXoC,GAASC,EAAAA,EAAAA,GAAwBrC,GAAM,ODLHsC,IACxC,MAAMC,UAA0BC,EAAAA,UAC9BC,MAAAA,GACE,OAAKC,KAAKxD,MAAMyC,QAGTtC,EAAAA,EAAAA,KAACiD,EAAS,IAAKI,KAAKxD,SAFlBG,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAACnC,GAAG,UAGxB,EAGF,OAAOwC,EAAAA,EAAAA,IAAQJ,EAARI,CAA4BK,EAAkB,GCAvD,CAGGI,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Name/Name.module.css?8e24","components/Dialogs/Name/Name.js","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/AuthRedirect.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Dialogs_messages__Cg2l+\",\"messages__heading\":\"Dialogs_messages__heading__gfOM5\",\"messages__names\":\"Dialogs_messages__names__2Wykg\",\"messages__items\":\"Dialogs_messages__items__7YFQa\",\"messages__form\":\"Dialogs_messages__form__nYw66\",\"messages__button\":\"Dialogs_messages__button__TRO2C\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages__name\":\"Name_messages__name__Z8sIR\",\"active\":\"Name_active__0eRE6\"};","import {NavLink} from \"react-router-dom\";\nimport classes from \"./Name.module.css\";\n\nconst Name = (props) => {\n  let path = \"/dialogues/\" + props.id;\n  return (\n    <li className={classes.messages__name}>\n      <NavLink to={path} className={({isActive}) => isActive ? classes.active : \"\"}>{props.name}</NavLink>\n    </li>\n  )\n};\n\nexport default Name;\n","// extracted by mini-css-extract-plugin\nexport default {\"messages__item\":\"Message_messages__item__UU3Xi\",\"position\":\"Message_position__UqDh+\"};","import classes from \"./Message.module.css\";\n\nconst Message = (props) => {\n  let isOwnerClass = props.isOwner ? classes.position : \"\";\n  return (\n    <div className={classes.messages__item + ' ' + isOwnerClass}>\n      {props.text}\n    </div>\n  )\n};\n\nexport default Message;\n","import classes from './Dialogs.module.css'\nimport Name from \"./Name/Name\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../utils/validation\";\n\nconst maxLength50 = maxLengthCreator(50);\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.messages__form}>\n      <Field component={Textarea} cols=\"30\" rows=\"5\" name=\"message\" validate={[required, maxLength50]}/>\n      <button className={classes.messages__button} type=\"submit\">&#10140;</button>\n    </form>\n  )\n}\n\nconst AddMessageReduxForm = reduxForm({form: \"addMessageForm\"})(addMessageForm)\nconst Dialogs = (props) => {\n  let nameElements = props.dialogs.names.map(\n    (name, index) => <Name id={name.id} name={name.text} key={index}/>);\n\n  let messagesElements = props.dialogs.messages.map(\n    (message, index) => <Message text={message.text} isOwner={message.isOwner} key={index}/>);\n\n  let addMessage = (text) => {\n    props.addMessage(text.message);\n  }\n\n  if (!props.isAuth) {\n    return <Navigate to=\"/login\"/>;\n  }\n  return (\n    <div className={classes.messages}>\n      <h1 className={classes.messages__heading}>Dialogues</h1>\n      <div className={classes.messages__names}>\n        <ul>\n          {nameElements}\n        </ul>\n      </div>\n      <div className={classes.messages__items}>\n        <AddMessageReduxForm onSubmit={addMessage} />\n        {messagesElements}\n      </div>\n    </div>\n  )\n}\nexport default Dialogs;\n","import {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\n\nlet propsItemsRedirect = (state) => {\n  return {\n    isAuth: state.authReducer.isAuth\n  }\n}\nexport const WithAuthRedirectComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      if (!this.props.isAuth) {\n        return <Navigate to=\"/login\"/>;\n      }\n      return <Component {...this.props} />\n    }\n  }\n\n  return connect(propsItemsRedirect)(RedirectComponent);\n}\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {WithAuthRedirectComponent} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\nlet propsItems = (state) => {\n  return{\n    dialogs: state.dialogsReducer\n  }\n}\n\nlet callbackItems = (dispatch) => {\n  return {\n    addMessage: (text) => {\n      dispatch(addMessageActionCreator(text))\n    }\n  }\n}\n\nexport default compose(\n  connect(propsItems, callbackItems),\n  WithAuthRedirectComponent\n) (Dialogs);\n"],"names":["props","path","id","_jsx","className","classes","children","NavLink","to","_ref","isActive","name","isOwnerClass","isOwner","text","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","cols","rows","validate","required","type","nameElements","dialogs","names","map","index","Name","messagesElements","messages","message","Message","isAuth","addMessage","Navigate","propsItemsRedirect","state","authReducer","compose","connect","dialogsReducer","dispatch","addMessageActionCreator","Component","RedirectComponent","React","render","this","Dialogs"],"sourceRoot":""}